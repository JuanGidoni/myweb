name: Deploy to GitHub Pages

on:
  push:
    branches:
      - master
  workflow_dispatch:  # Optional: allows manual triggering of the workflow

permissions:
  contents: read     # To read repository contents
  pages: write       # To deploy to GitHub Pages
  id-token: write    # Required for OIDC authentication
  pull-requests: write # Required to comment on pull requests

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Install dependencies
      - name: Install dependencies
        run: npm install

      # Step 3: Build the project
      - name: Build the project
        run: npm run build

      # Step 4: Setup GitHub Pages
      - name: Setup Pages
        uses: actions/configure-pages@v4

      # Step 5: Upload build artifacts to GitHub Pages
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './dist'  # Ensure this matches the location of your build output

      # Step 6: Find the associated pull request before deployment
      - name: Find Pull Request
        id: find_pr
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Set GH_TOKEN for GitHub CLI
        run: |
          PR_NUMBER=$(gh pr list --search "${{ github.sha }}" --state open --json number --jq ".[0].number")
          echo "pr_number=$PR_NUMBER" >> $GITHUB_ENV

      # Step 7: Add initial PR comment about deployment progress
      - name: Add PR Comment
        if: env.pr_number != ''
        uses: mshick/add-pr-comment@v2.8.2
        with:
          message: |
            :hourglass_flowing_sand: Deployment is currently in progress...
          issue: ${{ env.pr_number }}
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      # Step 8: Deploy to GitHub Pages
      - name: Deploy to GitHub Pages
        id: deploy  # Adding an ID to this step for later reference
        run: |
          # Your deploy command here, e.g., npm run deploy or actions/deploy-pages@v4
          npm run deploy
        continue-on-error: true  # Allow the workflow to continue even if this step fails

      # Step 9: Comment on PR Deployment Status
      - name: Comment on PR Deployment Status
        if: env.pr_number != ''
        run: |
          if [ "${{ steps.deploy.outcome }}" == "success" ]; then
            COMMENT_MESSAGE=":rocket: Successfully deployed to GitHub Pages!";
          else
            COMMENT_MESSAGE=":x: Failed to deploy to GitHub Pages.";
          fi

          curl -X POST \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            -d "{\"body\":\"$COMMENT_MESSAGE\"}" \
            "https://api.github.com/repos/${{ github.repository }}/issues/${{ env.pr_number }}/comments"

      # Step 10: Cleanup the artifacts
      - name: Cleanup
        run: rm -rf dist
