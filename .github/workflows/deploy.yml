name: Deploy to GitHub Pages

# Trigger the workflow on every push to the master branch
on:
  push:
    branches:
      - master

permissions:
  contents: read   # To read repository contents
  pages: write     # To deploy to GitHub Pages
  id-token: write  # Required for OIDC authentication

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Install dependencies
      - name: Install dependencies
        run: npm install

      # Step 3: Build the project
      - name: Build the project
        run: npm run build

      # Step 4: Setup GitHub Pages
      - name: Setup Pages
        uses: actions/configure-pages@v4

      # Step 5: Upload build artifacts to GitHub Pages
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './dist'  # Ensure this matches the location of your build output

      # Step 6: Deploy to GitHub Pages
      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4

      # Step 7: Comment on Success or Failure Deploy using mshick/add-pr-comment@v2.8.2
      - name: Add PR Comment
        if: success() || failure()  # Add comment whether the job succeeds or fails
        uses: mshick/add-pr-comment@v2.8.2
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          body: |
            Deployment status: ${{ job.status }}

            - **Branch**: ${{ github.ref }}
            - **Commit**: [${{ github.sha }}](https://github.com/${{ github.repository }}/commit/${{ github.sha }})
            - **Workflow Run**: [View here](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})

      # Step 8: Clean up the artifacts
      - name: Cleanup
        run: rm -rf dist
