name: Deploy to Production on Master Push

on:
  push:
    branches:
      - master

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Install dependencies
      - name: Install dependencies
        run: npm install

      # Build the project
      - name: Build
        run: npm run build

      # Setup Pages
      - name: Setup Pages
        uses: actions/configure-pages@v4

      # Upload artifact
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: "./dist"

      # Deploy to production
      - name: Deploy to GitHub Pages (Production)
        uses: actions/deploy-pages@v4

      - name: Comment on Success or Failure Deploy
        uses: actions/github-script@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { owner, repo } = context.repo;
            const { data: { html_url } } = await github.repos.getPages({ owner, repo });
            const { data: { status } } = await github.repos.getPagesBuild({ owner, repo });
            const { data: { sha } } = await github.repos.getCommit({ owner, repo, ref: context.sha });
            const { data: { login } } = await github.users.getByUsername({ username: context.actor });
            const { data: { html_url: commitUrl } } = await github.repos.getCommit({ owner, repo, ref: context.sha });
            const { data: { html_url: actionUrl } } = await github.actions.getWorkflowRun({ owner, repo, run_id: context.runId });
            const { data: { html_url: pagesUrl } } = await github.repos.getPages({ owner, repo });
            const { data: { html_url: pagesBuildUrl } } = await github.repos.getPagesBuild({ owner, repo });

            const comment = status === 'built' ? `:rocket: Successfully deployed to [GitHub Pages](${html_url})!` : `:x: Failed to deploy to [GitHub Pages](${html_url})!`;
            const body = `### Deploy to GitHub Pages\n\n${comment}\n\n- **Status:** ${status}\n- **Commit:** [${sha.slice(0, 7)}](${commitUrl})\n- **Author:** [${login}](${login})\n- **Workflow:** [${context.workflow}](${actionUrl})\n- **Pages:** [GitHub Pages](${pagesUrl})\n- **Pages Build:** [GitHub Pages Build](${pagesBuildUrl})`;
            await github.issues.createComment({ owner, repo, issue_number: context.issue.number, body });

      - name: Cleanup
        run: rm -rf dist