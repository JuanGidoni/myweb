name: Deploy Environment via Comment

on:
  issue_comment:
    types: [created]

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  deploy-on-comment:
    if: contains(github.event.comment.body, '/deploy')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Define environments based on the PR comment
      - name: Define environment
        id: env-setup
        run: |
          if [[ "${{ github.event.comment.body }}" == *"/deploy pre"* ]]; then
            echo "environment=pre" >> $GITHUB_ENV
            echo "pre" >> $GITHUB_ENV
          elif [[ "${{ github.event.comment.body }}" == *"/deploy prod"* ]]; then
            echo "environment=production" >> $GITHUB_ENV
            echo "prod" >> $GITHUB_ENV
          else
            echo "Invalid environment. Exiting."
            exit 1
          fi

      # Check label for production deployment
      - name: Check label for production deployment
        id: check-label
        if: env.environment == 'prod'
        run: |
          LABELS=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.issue.number }}/labels)
          echo "Checking if 'deploy' label is applied..."
          if [[ $LABELS != *"deploy"* ]]; then
            echo "Label 'deploy' not found. Exiting."
            echo "false" >> $GITHUB_ENV
            exit 1
          fi
          echo "Label 'deploy' found. Proceeding to production deployment."
          echo "true" >> $GITHUB_ENV

      # Send status message
      - name: Send status message
        run: |
          if [[ "${{ env.environment }}" == "production" && "${{ env.false }}" == "false" ]]; then
            curl -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              -H "Accept: application/vnd.github.v3+json" \
              https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.issue.number }}/comments \
              -d '{"body": "Deployment to production will proceed as the required label is present."}'
          elif [[ "${{ env.environment }}" == "production" ]]; then
            curl -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              -H "Accept: application/vnd.github.v3+json" \
              https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.issue.number }}/comments \
              -d '{"body": "Deployment to production was not executed because the required label is missing."}'
            exit 1
          elif [[ "${{ env.environment }}" == "pre" ]]; then
            curl -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              -H "Accept: application/vnd.github.v3+json" \
              https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.issue.number }}/comments \
              -d '{"body": "Deployment to pre-environment will proceed."}'
          fi

      # Install dependencies
      - name: Install dependencies
        run: |
          npm install

      # Build the project
      - name: Build
        run: npm run build

      # Setup Pages
      - name: Setup Pages
        uses: actions/configure-pages@v4

      # Upload artifact
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: "./dist"

      # Deploy based on environment
      - name: Deploy
        run: |
          if [ "${{ env.environment }}" == "pre" ]; then
            echo "Deploying to pre-environment..."
            # Add specific deploy steps for 'pre'
          elif [ "${{ env.environment }}" == "production" ]; then
            echo "Deploying to production..."
            # Add specific deploy steps for 'production'
          fi